import { IState, ITemperatureSample, ICleaningEntry, ITestingEntry, IConfig } from './common/common';
export declare function init(cb: (err: Error | undefined) => void): void;
export declare function getState(cb: (err: Error | undefined, state: IState | undefined) => void): void;
export declare function updateState(newState: IState, cb?: (err: Error | undefined) => void): void;
export declare function getConfig(cb: (err: Error | undefined, config: IConfig | undefined) => void): void;
export declare function updateConfig(config: IConfig, cb: (err: Error | undefined) => void): void;
export declare function getTemperatureHistory(userId: string, cb: (err: Error | undefined, history: ITemperatureSample[] | undefined) => void): void;
export declare function getCleaningHistory(userId: string, cb: (err: Error | undefined, history: ICleaningEntry[] | undefined) => void): void;
export declare function createCleaningEntry(userId: string, cleaningEntry: ICleaningEntry, cb: (err: Error | undefined) => void): void;
export declare function getTestingHistory(userId: string, cb: (err: Error | undefined, history: ITestingEntry[] | undefined) => void): void;
export declare function createTestingEntry(userId: string, cleaningEntry: ITestingEntry, cb: (err: Error | undefined) => void): void;
